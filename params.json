{
  "name": "Android.toolbar",
  "tagline": "ToorBar+DrawerNavigation实现导航效果",
  "body": "先引入设计规范，在app的gradle的dependencies中加入：\r\n```\r\ncompile 'com.android.support:design:23.4.0'\r\n```\r\n版本要和appcompat版本一样。\r\n要使用ToolBar，就要把原来的ActionBar隐藏，在styles.xml中修改代码如下;\r\n```\r\n<style name=\"AppTheme\" parent=\"Theme.AppCompat.Light.DarkActionBar\">\r\n    <!-- Customize your theme here. -->\r\n    <item name=\"windowActionBar\">false</item>\r\n    <item name=\"windowNoTitle\">true</item>\r\n    <item name=\"colorPrimary\">@color/colorPrimary</item>\r\n    <item name=\"colorPrimaryDark\">@color/colorPrimaryDark</item>\r\n    <item name=\"colorAccent\">@color/colorAccent</item>\r\n</style>\r\n```\r\n现在我们可以使用ToolBar了。\r\n\r\n先来看一下布局文件：\r\n```\r\n<android.support.v4.widget.DrawerLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:id=\"@+id/drawer_layout\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\">\r\n    <android.support.design.widget.CoordinatorLayout\r\n        android:id=\"@+id/rootLayout\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n        <android.support.design.widget.AppBarLayout\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\">\r\n            <android.support.v7.widget.Toolbar\r\n                android:id=\"@+id/toolbar_main\"\r\n                android:layout_width=\"fill_parent\"\r\n                android:layout_height=\"?attr/actionBarSize\"\r\n                android:background=\"?attr/colorPrimary\"\r\n                android:minHeight=\"?attr/actionBarSize\"\r\n                android:title=\"主界面\"\r\n                app:layout_scrollFlags=\"scroll|enterAlways\"\r\n                app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\">\r\n            </android.support.v7.widget.Toolbar>\r\n        </android.support.design.widget.AppBarLayout>\r\n        <FrameLayout\r\n            android:id=\"@+id/content_frame\"\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"match_parent\"\r\n            app:layout_behavior=\"@string/appbar_scrolling_view_behavior\">\r\n            <TextView\r\n                android:layout_width=\"match_parent\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:text=\"Hello World\"/>\r\n        </FrameLayout>\r\n    </android.support.design.widget.CoordinatorLayout>\r\n    <android.support.design.widget.NavigationView\r\n        android:id=\"@+id/navigation_drawer\"\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\"\r\n        android:layout_gravity=\"start\"\r\n        android:fitsSystemWindows=\"true\"\r\n        app:itemTextColor=\"#6F6F6F\"\r\n        app:menu=\"@menu/menu_navi_drawer\">\r\n    </android.support.design.widget.NavigationView>\r\n</android.support.v4.widget.DrawerLayout>\r\n在NavigationView中用到了menu文件menu_navi_drawer.xml，用来显示DrawerNavigation中的导航条目,该文件代码如下：\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<menu xmlns:android=\"http://schemas.android.com/apk/res/android\">\r\n    <group>\r\n        <item android:id=\"@+id/navi_drawer_new_task\"\r\n            android:title=\"菜单1\">\r\n        </item>\r\n        <item android:id=\"@+id/navi_drawer_settings\"\r\n            android:title=\"菜单2\">\r\n        </item>\r\n    </group>\r\n</menu>\r\n```\r\n再来看看MainActivity：\r\n```\r\npublic class MainActivity extends AppCompatActivity {\r\n    public Toolbar toolbar;\r\n    ActionBarDrawerToggle mDrawerToggle;\r\n    DrawerLayout drawerLayout;\r\n    NavigationView navigationView;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_main);\r\n        buildToolbar(R.id.toolbar_main);\r\n        buildDrawer(R.id.drawer_layout, R.id.navigation_drawer, R.layout.user_info);\r\n    }\r\n    public void buildToolbar(int id) {\r\n        toolbar = (Toolbar) findViewById(id);\r\n        setSupportActionBar(toolbar);\r\n    }\r\n    public void buildDrawer(int drawerLayoutId, int naviDrawerId, int naviDrawerHeaderRes) {\r\n        drawerLayout = (DrawerLayout) findViewById(drawerLayoutId);\r\n        navigationView = (NavigationView) findViewById(naviDrawerId);\r\n        if (toolbar != null) {\r\n            //Construct a new ActionBarDrawerToggle with a Toolbar.\r\n            mDrawerToggle = new ActionBarDrawerToggle(this, drawerLayout, toolbar,\r\n                    R.string.app_name, R.string.app_name);\r\n            mDrawerToggle.syncState();//给drawerNavigation加上触发按钮\r\n            navigationView.inflateHeaderView(naviDrawerHeaderRes);//给drawerNavigation加上头部\r\n            navigationView.setNavigationItemSelectedListener(new NavigationView.OnNavigationItemSelectedListener() {\r\n                @Override\r\n                public boolean onNavigationItemSelected(MenuItem menuItem) {\r\n                    drawerLayout.closeDrawers();\r\n                    onNavidrawerItemSelected(menuItem);\r\n                    return true;\r\n                }\r\n            });\r\n        }\r\n    }\r\n    //对菜单的点击做出回应，这里只给菜单1添加一个打开另一个Activity的动作\r\n    public boolean onNavidrawerItemSelected(MenuItem menuItem) {\r\n        int id = menuItem.getItemId();\r\n        switch (id) {\r\n            case R.id.navi_drawer_new_task:\r\n                Intent intent = new Intent(this, TestActivity.class);\r\n                startActivity(intent);\r\n                break;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n```\r\n这里用到的头部信息布局文件就不展示了，可以自己添加控件。\r\n菜单1打开的TestActivity的布局文件如下：\r\n```\r\n<?xml version=\"1.0\" encoding=\"utf-8\"?>\r\n<LinearLayout xmlns:android=\"http://schemas.android.com/apk/res/android\"\r\n    xmlns:app=\"http://schemas.android.com/apk/res-auto\"\r\n    android:layout_width=\"match_parent\"\r\n    android:layout_height=\"match_parent\"\r\n    android:orientation=\"vertical\">\r\n    <android.support.design.widget.AppBarLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"wrap_content\">\r\n        <android.support.v7.widget.Toolbar\r\n            android:id=\"@+id/toolbar_main\"\r\n            android:layout_width=\"fill_parent\"\r\n            android:layout_height=\"?attr/actionBarSize\"\r\n            android:background=\"?attr/colorPrimary\"\r\n            android:minHeight=\"?attr/actionBarSize\"\r\n            app:layout_scrollFlags=\"scroll|enterAlways\"\r\n            app:theme=\"@style/ThemeOverlay.AppCompat.Dark.ActionBar\">\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"start\"\r\n                android:text=\"返回\" />\r\n            <TextView\r\n                android:layout_width=\"wrap_content\"\r\n                android:layout_height=\"wrap_content\"\r\n                android:layout_gravity=\"center\"\r\n                android:text=\"标题\" />\r\n        </android.support.v7.widget.Toolbar>\r\n    </android.support.design.widget.AppBarLayout>\r\n    <FrameLayout\r\n        android:layout_width=\"match_parent\"\r\n        android:layout_height=\"match_parent\">\r\n        <TextView\r\n            android:layout_width=\"match_parent\"\r\n            android:layout_height=\"wrap_content\"\r\n            android:text=\"测试\" />\r\n    </FrameLayout>\r\n</LinearLayout>\r\n```\r\n在ToolBar中添加的标题，可以实现标题居中。\r\nTestActivity代码如下：\r\n```\r\npublic class TestActivity extends AppCompatActivity {\r\n    public Toolbar toolbar;\r\n    @Override\r\n    protected void onCreate(Bundle savedInstanceState) {\r\n        super.onCreate(savedInstanceState);\r\n        setContentView(R.layout.activity_test);\r\n        buildToolbar(R.id.toolbar_main);\r\n        getSupportActionBar().setTitle(\"\");\r\n    }\r\n    public void buildToolbar(int id) {\r\n        toolbar = (Toolbar) findViewById(id);\r\n        setSupportActionBar(toolbar);\r\n        this.toolbar.setNavigationIcon(R.drawable.abc_ic_ab_back_mtrl_am_alpha);\r\n        this.toolbar.setNavigationOnClickListener(new View.OnClickListener() {\r\n            @Override\r\n            public void onClick(View v) {\r\n                finish();\r\n            }\r\n        });\r\n    }\r\n}\r\n```",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}